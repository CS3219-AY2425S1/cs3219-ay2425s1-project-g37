[
  {
    "title": "Reverse a String",
    "content": "Write a function that reverses a string. The input string is given as an array of characters `s`.\nYou must do this by modifying the input array [in-place](https://en.wikipedia.org/wiki/In-place_algorithm) with `O(1)` extra memory.\n**Example 1:**\n**Input:** s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n**Output:** [\"o\",\"l\",\"l\",\"e\",\"h\"]\n**Example 2:**\n**Input:** s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n**Output:** [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n**Constraints:**\n* `1 <= s.length <= 105`\n* `s[i]` is a [printable ascii character](https://en.wikipedia.org/wiki/ASCII#Printable_characters).",
    "difficulty": "EASY",
    "tags": ["strings", "algorithms"],
    "leetCodeLink": "https://leetcode.com/problems/reverse-string"
  },
  {
    "title": "Linked List Cycle Detection",
    "content": "Given `head`, the head of a linked list, determine if the linked list has a cycle in it.\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the `next` pointer. Internally, `pos` is used to denote the index of the node that tail's `next` pointer is connected to. **Note that `pos` is not passed as a parameter**.\nReturn `true` _if there is a cycle in the linked list_. Otherwise, return `false`.\n**Example 1:**\n![](https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png)\n**Input:** head = [3,2,0,-4], pos = 1\n**Output:** true\n**Explanation:** There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\n**Example 2:**\n![](https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png)\n**Input:** head = [1,2], pos = 0\n**Output:** true\n**Explanation:** There is a cycle in the linked list, where the tail connects to the 0th node.\n**Example 3:**\n![](https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png)\n**Input:** head = [1], pos = -1\n**Output:** false\n**Explanation:** There is no cycle in the linked list.\n**Constraints:**\n* The number of the nodes in the list is in the range `[0, 104]`.\n* `-105 <= Node.val <= 105`\n* `pos` is `-1` or a **valid index** in the linked-list.\n**Follow up:** Can you solve it using `O(1)` (i.e. constant) memory?",
    "difficulty": "EASY",
    "tags": ["data structures", "algorithms"],
    "leetCodeLink": "https://leetcode.com/problems/linked-list-cycle/"
  }
]
