services:
  mongo:
    # https://ginkcode.com/post/how-to-set-up-mongodb-with-replica-set-via-docker-compose
    build:
      context: mongo
      dockerfile: Dockerfile
    container_name: mongodb-replicaset
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 -u root -p root --authenticationDatabase admin
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - data:/data/db
    networks:
      - webnet

  questions:
    build:
      context: .
      dockerfile: services/questions-service/Dockerfile
    container_name: questions
    restart: always
    environment:
      - PORT=${VITE_QUESTION_SERVICE_PORT}
    ports:
      - ${VITE_QUESTION_SERVICE_PORT}:${VITE_QUESTION_SERVICE_PORT}
    depends_on:
      - mongo
    networks:
      - webnet

volumes:
  data:

networks:
  webnet:
